/*
 * Raven API
 * This is OpenAPI defintion for the APIs of Raven.  You can find out more about Raven at [https://ravenapp.dev/](https://ravenapp.dev/).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@ravenapp.dev
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

import { Data } from "./Data";
import { EventOverride } from "./EventOverride";
import { User } from "./User";
import { convertToType } from "../utils";
export class SendEvent {
  constructor(event, user) {
    this.event = event;
    this.user = user;
  }

  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SendEvent();
      if (data.hasOwnProperty("event"))
        obj.event = convertToType(data["event"], "String");
      if (data.hasOwnProperty("user"))
        obj.user = User.constructFromObject(data["user"]);
      if (data.hasOwnProperty("data"))
        obj.data = Data.constructFromObject(data["data"]);
      if (data.hasOwnProperty("schedule_at"))
        obj.scheduleAt = convertToType(data["schedule_at"], "String");
      if (data.hasOwnProperty("override"))
        obj.override = EventOverride.constructFromObject(data["override"]);
    }
    return obj;
  }

  getEvent() {
    return this.event;
  }

  setEvent(event) {
    this.event = event;
  }

  getUser() {
    return this.user;
  }

  setUser(user) {
    this.user = user;
  }

  getData() {
    return this.data;
  }

  setData(data) {
    this.data = data;
  }

  getscheduleAt() {
    return this.scheduleAt;
  }

  setscheduleAt(scheduleAt) {
    this.scheduleAt = scheduleAt;
  }

  getOverride() {
    return this.override;
  }

  setOverride(override) {
    this.override = override;
  }
}

SendEvent.prototype.event = undefined;

SendEvent.prototype.user = undefined;

SendEvent.prototype.data = undefined;

SendEvent.prototype.scheduleAt = undefined;

SendEvent.prototype.override = undefined;
